[tool:pytest]
# Enhanced pytest configuration for Obsidian Copilot
minversion = 7.0
addopts = 
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=90
    --cov-branch
    --timeout=30
    -v
    --tb=short
    --durations=10
    --durations-min=1.0
    --maxfail=3
    --dist=loadbalance
    --numprocesses=auto
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test categorization markers
markers = 
    # Test types
    unit: Unit tests (fast, isolated)
    integration: Integration tests (medium speed, with dependencies)
    e2e: End-to-end tests (slow, full system)
    performance: Performance and benchmark tests
    security: Security-related tests
    
    # Dependency markers
    requires_opensearch: Tests that need OpenSearch running
    requires_redis: Tests that need Redis running
    requires_models: Tests that need ML models loaded
    requires_docker: Tests that need Docker containers
    requires_network: Tests that need network access
    
    # Speed markers
    slow: Slow running tests (>5 seconds)
    fast: Fast tests (<1 second)
    
    # Feature markers
    agents: Tests for Agent OS functionality
    retrieval: Tests for RAG retrieval system
    api: Tests for API endpoints
    streaming: Tests for streaming responses
    vault_analysis: Tests for vault analysis features
    
    # Environment markers
    dev_only: Tests that only run in development
    ci_only: Tests that only run in CI
    local_only: Tests that only run locally

# Warning filters
filterwarnings = 
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::ResourceWarning
    ignore:.*unclosed.*:ResourceWarning
    error::UserWarning
    # Specific library warnings
    ignore:.*distutils.*:DeprecationWarning
    ignore:.*imp module.*:DeprecationWarning

# Async configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test discovery
collect_ignore = 
    setup.py
    conftest.py
    venv
    env
    .env
    node_modules
    build
    dist
    .git

# Minimum test versions
required_plugins = 
    pytest-asyncio>=0.21.0
    pytest-cov>=4.1.0
    pytest-xdist>=3.5.0
    pytest-mock>=3.12.0
    pytest-timeout>=2.2.0
    pytest-httpx>=0.26.0

# Performance settings
timeout_method = thread
timeout_func_only = true

# Parallel execution settings
# Override with -n auto or -n <number> for different parallelization
rsyncdirs = src tests

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)d)
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)d)
log_file_date_format = %Y-%m-%d %H:%M:%S

# Pytest cache
cache_dir = .pytest_cache

# Custom pytest configuration for different environments
# Use with: pytest -m "not slow" for fast tests only
# Use with: pytest -m "unit or integration" for non-e2e tests
# Use with: pytest --co -q to collect tests without running

# JUnit XML for CI integration
junit_suite_name = obsidian_copilot_tests
junit_logging = system-out
junit_log_passing_tests = false
junit_duration_report = total